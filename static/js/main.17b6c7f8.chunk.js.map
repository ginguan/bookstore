{"version":3,"sources":["redux/Reducer.js","redux/Store.js","components/BookInfo.js","components/NewBook.js","components/BookList.js","index.js"],"names":["DEFAULT_STATE","items","id","name","finished","description","price","category","finishedCount","visible","totalCount","Store","createStore","state","action","type","newState","JSON","parse","stringify","changeState","temCount","forEach","item","index","itemId","flag","delState","tempCount","console","log","splice","inxed","addState","push","editState","BookInfo","props","useState","open","setOpen","setName","setPrice","setCategory","setDescription","handleClickOpen","newBook","onClick","className","getDelItemAction","dispatch","onDelete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","InputProps","style","color","margin","defaultValue","fullWidth","onChange","e","target","value","multiline","DialogActions","Button","variant","trim","test","getEditItemAction","alert","NewBook","getState","setId","useEffect","getAddItemAction","submitAction","width","marginBottom","left","InputLabelProps","autoFocus","label","length","BookList","onChangeStore","setState","subscribe","this","Table","striped","bordered","hover","size","scope","map","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17b6c7f8.chunk.js","sourcesContent":["const DEFAULT_STATE = {\n    items:[{id:0,name:'The Last Days of John Lennon',finished:false,\n    description:'The greatest true-crime story in music history, as only James Patterson can tell it.',price:15.99,category:'History'\n    }\n],\n    finishedCount:0,\n    visible:true,\n    totalCount:1\n};\n\nexport default (state = DEFAULT_STATE, action)=>{\n    switch(action.type){\n        case 'Get':\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.items = action.items;\n            return newState;\n\n        case 'Modify':\n            const changeState = JSON.parse(JSON.stringify(state));\n\n            let temCount = 0;\n            changeState.items.forEach((item,index)=>{\n                if(action.itemId === item.id){\n                    item.finished = action.flag;\n                }\n                if(item.finished){\n                    temCount += 1;\n                }\n            });\n\n            changeState.finishedCount = temCount;\n            return changeState;\n\n        case 'Delete':\n            const delState = JSON.parse(JSON.stringify(state));\n            let tempCount = 0;\n            delState.items.forEach((item,index)=>{\n                if(action.itemId === item.id){\n                    console.log(item.id);\n                    delState.items.splice(index, 1);\n                }\n            })\n\n            delState.items.forEach((item,inxed)=>{\n                if(item.finished){\n                    tempCount += 1;\n                }\n            })\n            \n            delState.finishedCount = tempCount;\n            return delState;\n\n        case 'Add':\n            const addState = JSON.parse(JSON.stringify(state));\n            addState.items.push(action.item);\n            addState.totalCount++;\n            return addState;\n        case 'Edit':\n            const editState = JSON.parse(JSON.stringify(state));\n            editState.items.forEach((item,index)=>{\n                if(action.item.id === item.id){\n                    editState.items[index] = action.item;\n                }\n            })\n            return editState;\n        default:\n            return state;\n    }\n\n}","import {createStore} from 'redux';\nimport Reducer from './Reducer';\n\nconst Store = createStore(Reducer);\nexport default Store;;","import React,{ useState } from 'react';\nimport Store from '../redux/Store'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './BookInfo.css';\n\n\n function BookInfo(props){\n\n    const { item } = props;\n    const [id,setId] = useState(item.id);\n    const [open, setOpen] = useState(false);\n    const [name,setName] = useState(item.name);\n    const [price,setPrice] = useState(item.price);\n    const [category,setCategory] = useState(item.category);\n    const [description,setDescription] = useState(item.description);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const getEditItemAction= (item)=>({\n        type:'Edit',\n        item\n    });\n    const getDelItemAction= (itemId)=>({\n        type:'Delete',\n        itemId\n    });\n\n\n    const clear = ()=>{\n        setName(\"\");\n        setPrice(\"\");\n        setCategory(\"\");\n        setDescription(\"\");\n        setOpen(false)\n    }\n    const onDelete = function(itemId){\n        const action = getDelItemAction(itemId);\n        Store.dispatch(action);\n    }\n    var newBook = {\n        id,\n        name,\n        price,\n        category,\n        description,\n        finished:false\n    }\n    const onSubmit = ()=>{\n        \n        if(newBook.name.trim() == '' || newBook.price == '' || newBook.description == '' || newBook.category == ''){\n            alert('Blank input detected');\n            return;\n          }\n          if(!(/^[1-9]\\d*(((,\\d{3}){1})?(\\.\\d{0,2})?)$/.test(newBook.price))){\n            alert('Invalid price, please enter a number');\n            return;\n          }\n        const action = getEditItemAction(newBook);\n        Store.dispatch(action);\n        setOpen(false);\n    }\n\n    \n\n    return (\n        <tr>\n            <td onClick={handleClickOpen}>{item.name}</td>\n            <td onClick={handleClickOpen}>{item.price}</td>\n            <td onClick={handleClickOpen}>{item.category}</td>\n            <td onClick={handleClickOpen}>{item.description}</td>\n            <td>\n                \n                \n                <button\n                    className=\"btn btn-danger text-black delBtn\"\n                    onClick={()=> onDelete(item.id)}\n                    >\n                    Remove\n                </button>  \n                \n                \n                <Dialog open={open} onClose={handleClose} className=\"dialog\" aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\" className=\"dialogTitle\">Book Info</DialogTitle>\n                    <DialogContent className=\"dialog-content\"\n                    >\n                    Book Name\n                    <TextField\n                        InputProps={{style: { color: '#e9f4f5' },}}\n                        className=\"dialog-input\"\n                        margin=\"dense\"\n                        id=\"name\"\n                        type=\"text\"\n                        defaultValue={item.name}\n                        fullWidth\n                        onChange={(e) => {setName(e.target.value)}}\n                    />\n                    Price\n                    <TextField\n                        InputProps={{style: { color: '#e9f4f5' },}}\n                        className=\"dialog-input\"\n                        margin=\"dense\"\n                        id=\"price\"\n                        type=\"text\"\n                        defaultValue={item.price}\n                        fullWidth\n                        onChange={(e) => {setPrice(e.target.value)}}\n                    />\n                    Category\n                    <TextField\n                        InputProps={{style: { color: '#e9f4f5' },}}\n                        className=\"dialog-input\"\n                        margin=\"dense\"\n                        id=\"category\"\n                        type=\"text\"\n                        defaultValue={item.category}\n                        fullWidth\n                        onChange={(e) => {setCategory(e.target.value)}}\n                    />\n                    Description\n                    <TextField\n                        InputProps={{style: { color: '#e9f4f5' },}}\n                        className=\"dialog-input\"\n                        margin=\"dense\"\n                        id=\"description\"\n                        type=\"text\"\n                        defaultValue={item.description}\n                        fullWidth\n                        onChange={(e) => {setDescription(e.target.value)}}\n                        multiline\n                    />\n                    \n                    </DialogContent>\n                    <DialogActions className=\"dialog-action\">\n                    <Button onClick={clear} variant=\"contained\" color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\n                        Save\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </td>\n            \n        </tr>\n    )\n\n};\n\nexport default BookInfo;\n","import React, { useState , useEffect } from 'react';\nimport Store from '../redux/Store';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport './BookInfo.css';\n\nfunction NewBook(){\n    const [open, setOpen] = useState(false);\n    const {totalCount,visible}  =  Store.getState();\n    const [id,setId] = useState(0);\n    const [name,setName] = useState(\"\");\n    const [price,setPrice] = useState(\"\");\n    const [category,setCategory] = useState(\"\");\n    const [description,setDescription] = useState(\"\");\n\n    \n    const clear = ()=>{\n        setName(\"\");\n        setPrice(\"\");\n        setCategory(\"\");\n        setDescription(\"\");\n        setOpen(false)\n    }\n    \n    const item = {\n      id,\n      name,\n      price,\n      category,\n      description,\n      finished:false\n  }\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n      const getAddItemAction= (item)=>({\n        type:'Add',\n        item\n    });\n    const submitAction = ()=>{\n      const action = getAddItemAction(item);\n      Store.dispatch(action);\n      setOpen(false)\n    }\n\n    const onSubmit = ()=>{\n      \n      if(item.name.trim().length ===0 || item.price == '' || item.description.trim() == '' || item.category.trim() == ''){\n        alert('Blank input detected');\n        return;\n      }\n      if(!(/^[1-9]\\d*(((,\\d{3}){1})?(\\.\\d{0,2})?)$/.test(item.price))){\n        alert('Invalid price, please enter a number');\n        return;\n      }\n      setId(totalCount);\n    }\n\n    useEffect(() => {\n      (id !== 0 ) && submitAction()\n      setId(0)\n    },[id])\n\n    return (\n        <div style={{margin:'0 auto', width:'7rem', marginBottom:'1rem'}}>\n          <Button \n          style={{left:\"300%\"}}\n          variant=\"outlined\" variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n            Add Book\n          </Button>\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle \n            className=\"dialogTitle\"\n            id=\"form-dialog-title\">New Book</DialogTitle>\n            <DialogContent\n             className=\"dialog-content\">\n              <TextField\n              InputLabelProps={{style: { color: '#cee5e7' },}}\n              InputProps={{style: { color: '#e9f4f5' },}}\n                className=\"dialog-input\"\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Book Name\"\n                type=\"text\"\n                fullWidth\n                onChange={(e) => {setName(e.target.value)}}\n              />\n               <TextField\n               InputLabelProps={{style: { color: '#cee5e7' },}}\n               InputProps={{style: { color: '#e9f4f5' },}}\n                className=\"dialog-input\"\n                margin=\"dense\"\n                id=\"price\"\n                label=\"Price\"\n                type=\"text\"\n                fullWidth\n                onChange={(e) => {setPrice(e.target.value)}}\n              />\n               <TextField\n               InputLabelProps={{style: { color: '#cee5e7' },}}\n               InputProps={{style: { color: '#e9f4f5' },}}\n               className=\"dialog-input\"\n                margin=\"dense\"\n                id=\"category\"\n                label=\"Category\"\n                type=\"text\"\n                fullWidth\n                onChange={(e) => {setCategory(e.target.value)}}\n              />\n               <TextField\n               InputLabelProps={{style: { color: '#cee5e7' },}}\n               InputProps={{style: { color: '#e9f4f5' },}}\n               className=\"dialog-input\"\n                margin=\"dense\"\n                id=\"description\"\n                label=\"Description\"\n                type=\"text\"\n                fullWidth\n                multiline\n                onChange={(e) => {setDescription(e.target.value)}}\n              />\n            </DialogContent>\n            <DialogActions className=\"dialog-action\">\n              <Button onClick={clear} variant=\"contained\" color=\"secondary\">\n                Cancel\n              </Button>\n              <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\n                Create\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      );\n\n    }\n\nexport default NewBook;\n","import React, {Component} from 'react';\nimport Table from 'react-bootstrap/Table'\nimport './BookList.css';\nimport BookInfo from \"./BookInfo\";\nimport Store from '../redux/Store';\nimport NewBook from './NewBook';\n\n\nexport default class BookList extends Component {\n    constructor(props){\n        super(props);\n        this.state = Store.getState();\n    }\n\n    componentDidMount() {\n        Store.subscribe(this.onChangeStore);\n    }\n\n    onChangeStore = ()=>{\n       this.setState(Store.getState());\n    };\n\n\n    render() {\n        const {items} = this.state;\n\n        return (\n            <div className=\"background\">\n            <h1 >BookStore</h1>\n            <div className=\"container\">\n                \n                \n                <div className=\"dataTable\">\n                <Table striped bordered hover size = \"sm\" >\n                    <thead key={-1} className=\"thead-dark\" >\n                        <tr>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Price</th>\n                            <th scope=\"col\">Category</th>\n                            <th scope=\"col\">Description</th>\n                            <th scope='col'></th>\n                        </tr>\n                    </thead>\n                    <tbody >\n                        {items.map((item, index)=>(\n                            <BookInfo item={item} key={index} />\n                        ))}\n                    </tbody>\n                </Table>\n                </div>               \n                <NewBook/>\n            </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BookList from './components/BookList';\n\nReactDOM.render(\n\n    <BookList/>\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}